% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proftable.R
\name{proftable}
\alias{proftable}
\title{An alternative to \code{summaryRprof()}}
\usage{
proftable(file, lines = 10)
}
\arguments{
\item{file}{A profiling file generated by \code{Rprof()}}

\item{lines}{The number of lines (call stacks) you want returned. Lines are
printed from most time-intensive to least.}
}
\description{
\code{proftools} parses a profiling file and prints an easy-to-understand
table showing the most time-intensive function calls.
}
\details{
Line numbers are included if \code{Rprof()} was run with
\code{line.numbering=TRUE}. If it was run with \code{memory.profiling=TRUE},
this function will probably break.

Below the table are printed any files identified if line numbering is true,
the total time recorded by \code{Rprof()}, and the "parent call".  The
parent call consists of the parent call stack of all the call stacks in the\
table. Note that this is the parent call stack of only the printed lines,
not of all stacks recorded by \code{Rprof()}. This makes the table easier to read and fit into the console.
}
